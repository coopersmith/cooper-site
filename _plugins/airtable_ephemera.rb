require 'airtable'
require 'active_support/all'
require 'fileutils'
require 'net/http'
require 'uri'
require 'dotenv/load' if defined?(Dotenv)

module Jekyll
  class AirtableEphemeraGenerator < Generator
    safe true
    priority :high

    def generate(site)
      return unless ENV['AIRTABLE_API_KEY'] && ENV['AIRTABLE_BASE'] && ENV['AIRTABLE_EPHEMERA_TABLE']
      
      begin
        Jekyll.logger.info "Fetching Ephemera data from Airtable..."
        
        client = Airtable::Client.new(ENV['AIRTABLE_API_KEY'])
        table = client.table(ENV['AIRTABLE_BASE'], ENV['AIRTABLE_EPHEMERA_TABLE'])
        
        # Fetch all records
        records = table.all
        
        # Transform records into a more usable format
        ephemera_data = records.map do |record|
          attrs = record.attributes
          
          # Process attachments if they exist
          if attrs['Attachments'] && attrs['Attachments'].any?
            attrs['image_url'] = attrs['Attachments'][0]['url']
            attrs['image_filename'] = attrs['Attachments'][0]['filename']
          end
          
          # Get created time safely
          created_time = record.respond_to?(:created_time) ? record.created_time : attrs['Created']
          
          # Clean up and format data
          {
            'id' => record.id,
            'title' => attrs['Title'] || attrs['Name'] || 'Untitled',
            'description' => attrs['Description'] || attrs['Notes'],
            'date' => attrs['Date'],
            'location' => attrs['Location'],
            'tags' => attrs['Tags'],
            'image_url' => attrs['image_url'],
            'image_filename' => attrs['image_filename'],
            'created_time' => created_time
          }
        end
        
        # Sort by date (most recent first, fallback to created time)
        ephemera_data.sort_by! { |item| 
          date_to_sort = item['date'] || item['created_time'] || Time.now
          date_to_sort.is_a?(String) ? Date.parse(date_to_sort) : date_to_sort
        }.reverse!
        
        # Write to _data directory
        FileUtils.mkdir_p(File.join(site.source, '_data'))
        data_file = File.join(site.source, '_data', 'ephemera.yml')
        
        File.open(data_file, 'w') do |file|
          warning = "# This file is automatically generated from Airtable. Do not edit manually.\n"
          warning += "# Last updated: #{Time.now}\n\n"
          file.write(warning + ephemera_data.to_yaml)
        end
        
        Jekyll.logger.info "Successfully fetched #{ephemera_data.length} ephemera items"
        
        # Make data available to site
        site.data['ephemera'] = ephemera_data
        
      rescue => e
        Jekyll.logger.warn "Failed to fetch Ephemera data: #{e.message}"
        Jekyll.logger.warn "Ephemera section will not be available"
        site.data['ephemera'] = []
      end
    end
  end
end